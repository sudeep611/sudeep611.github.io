<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on Sudeep&#39;s Blog</title>
    <link>https://sudeepacharya.com.np/tags/Haskell/</link>
    <description>Recent content in Haskell on Sudeep&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Nov 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sudeepacharya.com.np/tags/Haskell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Credit card Verification Haskell Code</title>
      <link>https://sudeepacharya.com.np/blog/2017/11/25/credit-card-verification-haskell-code/</link>
      <pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/11/25/credit-card-verification-haskell-code/</guid>
      <description>{- Convert positive integer to list of digit -} {- Input : 12345 o/p : [1, 2, 3, 4, 5 -} toList :: Integer -&amp;gt; [Integer] toList 0 = [] toList x = toList (x `div` 10) ++ [x `mod` 10] {- Reverse the integer after converting it to list -} -- toDigitsRev :: Integer -&amp;gt; [Integer] toListReverse :: Integer -&amp;gt; [Integer] toListReverse xs = (reverse . toList) xs {- Double every second number -} doubleSecondEach :: [Integer] -&amp;gt; [Integer] doubleSecondEach [] = [] doubleSecondEach (x:[]) = [x] doubleSecondEach (x:y:xs) = x : (2*y) : doubleSecondEach xs {- Sum the digit in the number we are sure there is one digit number or two digit number -} sum&amp;#39; :: Integer -&amp;gt; Integer sum&amp;#39; x = (x `mod` 10) + (x `div` 10) {- sum all the element in list -} {- when a element is [13,5,6] we have to add like this: 1 + 3 + 5 + 6 -} sumDigits :: [Integer] -&amp;gt; Integer sumDigits [] = 0 sumDigits [x] = sum&amp;#39; x sumDigits (x:xs) = sum&amp;#39; x + sumDigits xs {- Validate the credit card number -} validate :: Integer -&amp;gt; Bool validate x = if (sumDigits $ doubleSecondEach $ toListReverse x ) `mod` 10 == 0 then True else False </description>
    </item>
  </channel>
</rss>
