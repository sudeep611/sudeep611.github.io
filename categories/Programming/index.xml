<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Sudeep&#39;s Blog</title>
    <link>https://sudeepacharya.com.np/categories/Programming/</link>
    <description>Recent content in Programming on Sudeep&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 May 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://sudeepacharya.com.np/categories/Programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Moving to Github Pages using Jekyll  from WordPress.com</title>
      <link>https://sudeepacharya.com.np/blog/2020/05/02/moving-wordpress.com-blog-jekyll-github/</link>
      <pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2020/05/02/moving-wordpress.com-blog-jekyll-github/</guid>
      <description>&lt;p&gt;I started my blog &amp;ldquo;hellocoding.wordpress.com&amp;rdquo; in 2013. WordPress.com provides the basic functionality of posting the post for free. It does not give the way to embed JavaScript and does not offer much control over your blog.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Silly way to comment in your Code</title>
      <link>https://sudeepacharya.com.np/blog/2020/01/08/a-silly-way-to-comment-in-your-code/</link>
      <pubDate>Wed, 08 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2020/01/08/a-silly-way-to-comment-in-your-code/</guid>
      <description>&lt;p&gt;During my beginners year of writing code, i used to comment unnecessarily. I realised this after i saw the code written by senior developers. The main purpose of the comment is to make your code understood by other developers who are working together in the same project or for other contributors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Install PHP Composer in your Mac</title>
      <link>https://sudeepacharya.com.np/blog/2020/01/04/how-to-install-php-composer-in-your-mac/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2020/01/04/how-to-install-php-composer-in-your-mac/</guid>
      <description>&lt;p&gt;Composer is the easiest way to manage dependencies to your small to large PHP projects.&lt;/p&gt;&#xA;&lt;p&gt;Use the following commands to install composer in your Mac&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to set up basic PHP Project structure with Composer</title>
      <link>https://sudeepacharya.com.np/blog/2020/01/04/how-to-set-up-basic-php-project-structure-with-composer/</link>
      <pubDate>Sat, 04 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2020/01/04/how-to-set-up-basic-php-project-structure-with-composer/</guid>
      <description>&lt;p&gt;Most of the time beginners learning PHP are unaware of &lt;a href=&#34;https://getcomposer.org/&#34;&gt;Composer&lt;/a&gt;, if you are among them, Composer is a dependency management tool for PHP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Kotlin (Part 5) - Class</title>
      <link>https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/</link>
      <pubDate>Wed, 09 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/</guid>
      <description>&lt;p&gt;Post Series:&lt;/p&gt;&#xA;&lt;p&gt;Part 1: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/&#34;&gt;Hello world and Basic Data Types&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 2: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/&#34;&gt;Array, Collection and Range&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 3: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/&#34;&gt;Control Flow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 4: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/&#34;&gt;Function&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 5: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/&#34;&gt;Class&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Kotlin (Part 4) - Function</title>
      <link>https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/</link>
      <pubDate>Tue, 25 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/</guid>
      <description>&lt;p&gt;Post Series:&#xA;Part 1: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/&#34;&gt;Hello world and Basic Data Types&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 2: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/&#34;&gt;Array, Collection and Range&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 3: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/&#34;&gt;Control Flow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 4: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/&#34;&gt;Function&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 5: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/&#34;&gt;Class&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Kotlin (Part 3) - Control Flow</title>
      <link>https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/</link>
      <pubDate>Mon, 17 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/</guid>
      <description>&lt;p&gt;Post Series:&lt;/p&gt;&#xA;&lt;p&gt;Part 1: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/&#34;&gt;Hello world and Basic Data Types&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 2: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/&#34;&gt;Array, Collection and Range&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 3: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/&#34;&gt;Control Flow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 4: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/&#34;&gt;Function&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 5: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/&#34;&gt;Class&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Kotlin (Part 2) - Array, Collection and Range</title>
      <link>https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/</guid>
      <description>&lt;p&gt;Post Series:&lt;/p&gt;&#xA;&lt;p&gt;Part 1: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/&#34;&gt;Hello world and Basic Data Types&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 2: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/&#34;&gt;Array, Collection and Range&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 3: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/&#34;&gt;Control Flow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 4: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/&#34;&gt;Function&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 5: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/&#34;&gt;Class&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;In this post we will discuss about the Array, Collection and Range in Kotlin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Kotlin (Part 1) - Hello world and Basic Data Types</title>
      <link>https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/</link>
      <pubDate>Mon, 03 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/</guid>
      <description>&lt;p&gt;Post Series:&lt;/p&gt;&#xA;&lt;p&gt;Part 1: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/03/learn-kotlin-part-1-hello-world-and-basic-data-types/&#34;&gt;Hello world and Basic Data Types&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 2: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/10/learn-kotlin-part-2-array-collection-and-range/&#34;&gt;Array, Collection and Range&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 3: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/17/learn-kotlin-part-3-control-flow/&#34;&gt;Control Flow&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 4: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2018/12/25/learn-kotlin-part-4-function/&#34;&gt;Function&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Part 5: &lt;a href=&#34;https://sudeepacharya.com.np/blog/2019/01/09/learn-kotlin-part-5-class/&#34;&gt;Class&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recursive directory traverse and append .png file to list</title>
      <link>https://sudeepacharya.com.np/blog/2017/12/04/recursive-directory-traverse-and-append-png-file-to-list/</link>
      <pubDate>Mon, 04 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/12/04/recursive-directory-traverse-and-append-png-file-to-list/</guid>
      <description>&lt;p&gt;Python Developer&amp;rsquo;s Meetup Nepal #13 Question Solution&lt;/p&gt;&#xA;&lt;p&gt;Q: Write a python script that recursively walks all sub-directories and searches all files with extension *.png or *.PNG and append them to the list.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Credit card Verification Haskell Code</title>
      <link>https://sudeepacharya.com.np/blog/2017/11/25/credit-card-verification-haskell-code/</link>
      <pubDate>Sat, 25 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/11/25/credit-card-verification-haskell-code/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-haskell&#34; data-lang=&#34;haskell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Convert positive integer to list of digit -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Input : 12345 o/p : [1, 2, 3, 4, 5 -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toList&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toList&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toList&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; toList (x `div` &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt; [x `mod` &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Reverse the integer after converting it to list -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- toDigitsRev :: Integer -&amp;gt; [Integer]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toListReverse&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;toListReverse&lt;/span&gt; xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (reverse &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; toList) xs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Double every second number -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;doubleSecondEach&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;doubleSecondEach&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;doubleSecondEach&lt;/span&gt; (x&lt;span style=&#34;color:#66d9ef&#34;&gt;:[]&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;doubleSecondEach&lt;/span&gt; (x&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt;y&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt;xs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;y) &lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt; doubleSecondEach xs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Sum the digit in the number we are sure there is one digit number or two digit number -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sum&amp;#39;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (x `mod` &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (x `div` &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- sum all the element in list -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- when a element is [13,5,6] we have to add like this: 1 + 3 + 5 + 6 -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sumDigits&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; [&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sumDigits&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sumDigits&lt;/span&gt; [x] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum&amp;#39; x&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sumDigits&lt;/span&gt; (x&lt;span style=&#34;color:#66d9ef&#34;&gt;:&lt;/span&gt;xs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum&amp;#39; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sumDigits xs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;{- Validate the credit card number -}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;validate&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;validate&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (sumDigits &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; doubleSecondEach &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt; toListReverse x ) `mod` &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;True&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Starting Animation from random time frame Unity</title>
      <link>https://sudeepacharya.com.np/blog/2017/07/11/starting-animation-at-different-time-unity/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/07/11/starting-animation-at-different-time-unity/</guid>
      <description>&lt;p&gt;Code snippet to start the animation at different time. Useful when there are many same animation running on screen and you want to make them random.&lt;/p&gt;</description>
    </item>
    <item>
      <title>C# code to shuffle Array</title>
      <link>https://sudeepacharya.com.np/blog/2017/07/09/c-sharp-code-to-shuffle-array/</link>
      <pubDate>Sun, 09 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/07/09/c-sharp-code-to-shuffle-array/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; T[] ShuffleArray&amp;lt;T&amp;gt;(T[] array) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    System.Random r = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; System.Random ();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i = array.Length; i &amp;gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i--) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; j = r.Next (i);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        T k = array [j];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        array [j] = array [i - &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        array [i - &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] = k;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; array;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Invisible Transparent Button in Unity3D</title>
      <link>https://sudeepacharya.com.np/blog/2017/03/30/invisible-transparent-button-unity3d/</link>
      <pubDate>Thu, 30 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2017/03/30/invisible-transparent-button-unity3d/</guid>
      <description>&lt;p&gt;Today i was working on a project where i required to add the invisible button. I tried different methods like making button transparent, adding the image in the button. But then i came to know about this solution. I think that this is probably the best solution.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Convert the list of images to PDF file and add watermark using python</title>
      <link>https://sudeepacharya.com.np/blog/2016/11/24/convert-images-to-pdf-add-watermark-python/</link>
      <pubDate>Thu, 24 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2016/11/24/convert-images-to-pdf-add-watermark-python/</guid>
      <description>&lt;h2 id=&#34;converting-list-of-images-to-pdf-in-ubuntu&#34;&gt;Converting list of images to PDF in Ubuntu&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s use ImageMagick tool. Normally it is installed in Ubuntu. If you need to install it then run:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install imagemagick&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Understanding Decorators in Python</title>
      <link>https://sudeepacharya.com.np/blog/2015/04/29/decorators-in-python/</link>
      <pubDate>Wed, 29 Apr 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/04/29/decorators-in-python/</guid>
      <description>&lt;p&gt;While learning Python in the beginning, i skipped the portion of the chapters on Decorators. After i worked on Flask and Django, I was introduced with the Decorators.&lt;/p&gt;&#xA;&lt;p&gt;Let us consider a simple flask app example:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to delete the commit history in github</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/19/delete-all-commit-history-github/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/19/delete-all-commit-history-github/</guid>
      <description>&lt;p&gt;Sometimes you may find deleting the commit history of your github project repository useful. You can easily delete the commit history by following the procedure below.&lt;/p&gt;&#xA;&lt;p&gt;It is always useful to keep the backup of your repository in your computer before removing all the commit history.&lt;/p&gt;</description>
    </item>
    <item>
      <title>URL Shortener with Django (Part 5) - Working with Templates and finishing up</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/16/urlshortener-with-django-working-with-templates/</link>
      <pubDate>Fri, 16 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/16/urlshortener-with-django-working-with-templates/</guid>
      <description>&lt;p&gt;Create folder &amp;rsquo;templates&amp;rsquo; inside &amp;lsquo;shortenersite&amp;rsquo; and then inside &amp;rsquo;templates&amp;rsquo; create folder &amp;lsquo;shortenersite&amp;rsquo;.&lt;/p&gt;&#xA;&lt;p&gt;Inside &amp;ldquo;shortenersite/templates/shortenersite/&amp;rdquo; create &amp;lsquo;base.html&amp;rsquo; and &amp;lsquo;index.html&amp;rsquo;. So now paste the following to them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>URL Shortener with Django (Part 4) - Working with Urls and views</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/15/urlshortener-with-django-urls-and-views/</link>
      <pubDate>Thu, 15 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/15/urlshortener-with-django-urls-and-views/</guid>
      <description>&lt;p&gt;Now we will be working with our actual URLs and Views of our site.&lt;/p&gt;&#xA;&lt;p&gt;Open up your &amp;ldquo;urlshortener/urls.py&amp;rdquo; and add the following code to it:&lt;/p&gt;&#xA;&lt;p&gt;[urlshortener/urls.py]&lt;/p&gt;</description>
    </item>
    <item>
      <title>URL Shortener with Django (Part 3) - Creating django app and model</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/14/urlshortener-with-django-creating-app-model/</link>
      <pubDate>Wed, 14 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/14/urlshortener-with-django-creating-app-model/</guid>
      <description>&lt;p&gt;Now, Let us create a Django app. From your project&amp;rsquo;s root directory run this command&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;django-admin startapp shortenersite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>URL Shortener with Django (Part 2) - Creating a new django project</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/13/urlshortener-with-django-creating-new-django-project/</link>
      <pubDate>Tue, 13 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/13/urlshortener-with-django-creating-new-django-project/</guid>
      <description>&lt;p&gt;Creating a Django project&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;django-admin startproject urlshortener&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now you will see new directory &amp;ldquo;urlshortener&amp;rdquo;. Now our folder structure looks something like:&lt;/p&gt;</description>
    </item>
    <item>
      <title>URL Shortener with Django (Part 1) - Creating virtual environment and installing Django</title>
      <link>https://sudeepacharya.com.np/blog/2015/01/12/urlshortener-with-django-create-virtual-environment-install-django/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2015/01/12/urlshortener-with-django-create-virtual-environment-install-django/</guid>
      <description>&lt;p&gt;I finally got the time to write a Django tutorial. In this tutorial we are building URL Shortener. If you are confused with what we are building then we are building something similar to (&lt;a href=&#34;http://bit.ly&#34;&gt;bit.ly&lt;/a&gt;) or (&lt;a href=&#34;http://goo.gl&#34;&gt;goo.gl&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to remove /public/ from URL in Laravel</title>
      <link>https://sudeepacharya.com.np/blog/2014/05/17/how-to-remove-public-from-url-in-laravel/</link>
      <pubDate>Sat, 17 May 2014 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2014/05/17/how-to-remove-public-from-url-in-laravel/</guid>
      <description>&lt;p&gt;By default in Laravel the URL to access your site is &lt;a href=&#34;http://example.com/public/&#34;&gt;http://example.com/public/&lt;/a&gt;. It is not good to keep public in URL as it makes URL ugly and longer.&lt;/p&gt;&#xA;&lt;p&gt;So, let&amp;rsquo;s talk about the solution to remove /public/ from the URL.&lt;/p&gt;</description>
    </item>
    <item>
      <title>JavaScript code to display Multiplication table</title>
      <link>https://sudeepacharya.com.np/blog/2014/02/02/javascript-code-multiplication-table/</link>
      <pubDate>Sun, 02 Feb 2014 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2014/02/02/javascript-code-multiplication-table/</guid>
      <description>&lt;p&gt;Through JavaScript you can easily write the html code in html document using document.write(). Using document.write() and for loop it is easy to print the table of user input number.&lt;/p&gt;&#xA;&lt;p&gt;First of all &amp;ldquo;prompt&amp;rdquo; box will appear and then this value will be parse to integer and the multiplication table is displayed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>C&#43;&#43; project – Encryption and Decryption</title>
      <link>https://sudeepacharya.com.np/blog/2013/12/26/Cplus-project-Encryption-and-Decryption/</link>
      <pubDate>Thu, 26 Dec 2013 00:00:00 +0000</pubDate>
      <guid>https://sudeepacharya.com.np/blog/2013/12/26/Cplus-project-Encryption-and-Decryption/</guid>
      <description>&lt;p&gt;As a project in C++ during my College, i choose Encryption and Decryption as my project. I am implemented very simple technique for Encryption and Decryption.&lt;/p&gt;&#xA;&lt;p&gt;The encryption and decryption is done on the basis of letter shifting method.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
